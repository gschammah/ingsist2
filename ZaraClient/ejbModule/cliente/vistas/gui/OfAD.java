package cliente.vistas.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

import cliente.controladores.OfADController;
import cliente.vistas.VistaOfAD;

public class OfAD extends JFrame {	
	
	private static final long serialVersionUID = 1L;
	
	private VistaOfAD vistaPadre;

	
	public OfAD(VistaOfAD vista) {
		initComponents();
		vistaPadre = vista;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		this.setTitle("Oferta de Artículos disponibles (OfAD)");

		jScrollPane1 = new JScrollPane();
		tablaArtDisponibles = new JTable();
		jScrollPane2 = new JScrollPane();
		tablaArtNuevos = new JTable();
		jLabel1 = new JLabel();
		jLabel2 = new JLabel();
		jLabel3 = new JLabel();
		btn_salir = new JButton();
		lblActualizacion = new JLabel();
		txtActualizacion = new JTextField();
		btn_registrarOfAD = new JButton();
		
		setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

		setTitle("Oferta de Artículos Disponibles");

		tablaArtDisponibles.setModel(new DefaultTableModel(
				new Object[][] {}, new String[] { "Artículo", "Descripción",
						"Precio", "Oferta" }) {			
			private static final long serialVersionUID = 1L;
			Class[] types = new Class[] { java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class };
			boolean[] canEdit = new boolean[] { false, false, false, false };

			@Override
			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			@Override
			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jScrollPane1.setViewportView(tablaArtDisponibles);
		tablaArtDisponibles.getColumnModel().getColumn(0).setMinWidth(100);
		tablaArtDisponibles.getColumnModel().getColumn(0)
				.setPreferredWidth(100);
		tablaArtDisponibles.getColumnModel().getColumn(0).setMaxWidth(100);
		tablaArtDisponibles.getColumnModel().getColumn(2).setMinWidth(70);
		tablaArtDisponibles.getColumnModel().getColumn(2).setPreferredWidth(70);
		tablaArtDisponibles.getColumnModel().getColumn(2).setMaxWidth(70);
		tablaArtDisponibles.getColumnModel().getColumn(3).setMinWidth(70);
		tablaArtDisponibles.getColumnModel().getColumn(3).setPreferredWidth(70);
		tablaArtDisponibles.getColumnModel().getColumn(3).setMaxWidth(70);

		tablaArtNuevos.setModel(new DefaultTableModel(
				new Object[][] {}, new String[] { "Artículo", "Descripción",
						"Precio", "Oferta" }) {	
			private static final long serialVersionUID = 1L;
			Class[] types = new Class[] { java.lang.String.class,
					java.lang.String.class, java.lang.String.class,
					java.lang.String.class };
			boolean[] canEdit = new boolean[] { false, false, false, false };

			@Override
			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			@Override
			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jScrollPane2.setViewportView(tablaArtNuevos);
		tablaArtNuevos.getColumnModel().getColumn(0).setMinWidth(100);
		tablaArtNuevos.getColumnModel().getColumn(0).setPreferredWidth(100);
		tablaArtNuevos.getColumnModel().getColumn(0).setMaxWidth(100);
		tablaArtNuevos.getColumnModel().getColumn(2).setMinWidth(70);
		tablaArtNuevos.getColumnModel().getColumn(2).setPreferredWidth(70);
		tablaArtNuevos.getColumnModel().getColumn(2).setMaxWidth(70);
		tablaArtNuevos.getColumnModel().getColumn(3).setMinWidth(70);
		tablaArtNuevos.getColumnModel().getColumn(3).setPreferredWidth(70);
		tablaArtNuevos.getColumnModel().getColumn(3).setMaxWidth(70);

		jLabel1.setText("Artículos Disponibles");

		jLabel2.setText("Artículos Nuevos");

		jLabel3.setText("Oferta de Artículos Disponibles (OfAD)");

		btn_salir.setText("Salir");
		
		btn_registrarOfAD.setText("Registrar OfAD");
		btn_registrarOfAD.addActionListener(new ActionListener(){

			public void actionPerformed(ActionEvent arg0) {		
				((OfADController)vistaPadre.getControlador()).cargarOfAD(true);
			}
			
		});

		btn_salir.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				((OfADController)vistaPadre.getControlador()).cerrar();
			}
		});

		lblActualizacion.setText("Última Actualización:");

		txtActualizacion.setEditable(false);		
		txtActualizacion.setText("Nunca");

		GroupLayout layout = new GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addGroup(GroupLayout.Alignment.TRAILING, layout
										.createSequentialGroup()
										.addGroup(
												layout
														.createParallelGroup(
																GroupLayout.Alignment.TRAILING)
														.addGroup(
																GroupLayout.Alignment.LEADING,
																layout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addGroup(
																				layout
																						.createParallelGroup(
																								GroupLayout.Alignment.LEADING)
																						.addComponent(
																								jLabel1)
																						.addComponent(
																								jLabel2)
																						.addGroup(
																								layout
																										.createSequentialGroup()
																										.addComponent(
																												lblActualizacion)
																										.addPreferredGap(
																												LayoutStyle.ComponentPlacement.UNRELATED)
																										.addComponent(
																												txtActualizacion,
																												GroupLayout.PREFERRED_SIZE,
																												200,
																												GroupLayout.PREFERRED_SIZE))))
														.addGroup(
																GroupLayout.Alignment.LEADING,
																layout
																		.createSequentialGroup()
																		.addGap(
																				236,
																				236,
																				236)
																		.addComponent(
																				jLabel3))
														.addGroup(
																GroupLayout.Alignment.LEADING,
																layout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addGroup(
																				layout
																						.createParallelGroup(
																								GroupLayout.Alignment.TRAILING,
																								false)
																						.addComponent(
																								jScrollPane2,
																								GroupLayout.Alignment.LEADING)
																						.addComponent(
																								jScrollPane1,
																								GroupLayout.Alignment.LEADING,
																								GroupLayout.DEFAULT_SIZE,
																								683,
																								Short.MAX_VALUE))))
										.addContainerGap())
						.addGroup(
								GroupLayout.Alignment.TRAILING,
								layout
										.createSequentialGroup()
										.addContainerGap()

										.addPreferredGap(
												LayoutStyle.ComponentPlacement.RELATED)

										.addPreferredGap(
												LayoutStyle.ComponentPlacement.RELATED,
												268, Short.MAX_VALUE)
										.addComponent(btn_registrarOfAD)
										.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(btn_salir).addGap(33, 33,
												33)));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								GroupLayout.Alignment.LEADING)
						.addGroup(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(jLabel3)
										.addGap(13, 13, 13)
										.addGroup(
												layout
														.createParallelGroup(
																GroupLayout.Alignment.BASELINE)
														.addComponent(lblActualizacion)
														.addComponent(
																txtActualizacion,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jLabel1)
										.addPreferredGap(
												LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(
												jScrollPane1,
												GroupLayout.PREFERRED_SIZE,
												155,
												GroupLayout.PREFERRED_SIZE)
										.addGap(18, 18, 18)
										.addComponent(jLabel2)
										.addPreferredGap(
												LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(
												jScrollPane2,
												GroupLayout.PREFERRED_SIZE,
												157,
												GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												layout
														.createParallelGroup(
																GroupLayout.Alignment.TRAILING)
														.addComponent(btn_salir)
														.addComponent(btn_registrarOfAD))
										.addContainerGap(16, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args
	 *            the command line arguments
	 */

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private JButton btn_salir;
	private JLabel jLabel1;
	private JLabel jLabel2;
	private JLabel jLabel3;
	private JLabel lblActualizacion;
	private JScrollPane jScrollPane1;
	private JScrollPane jScrollPane2;
	private JTable tablaArtNuevos;
	private JTable tablaArtDisponibles;
	private JTextField txtActualizacion;
	private JButton btn_registrarOfAD;

	// End of variables declaration//GEN-END:variables

	public JTable getTablaArtDisponibles() {
		return tablaArtDisponibles;
	}

	public JTable getTablaArtNuevos() {
		return tablaArtNuevos;
	}

	public JTextField getTxtActualizacion() {
		return txtActualizacion;
	}

}
