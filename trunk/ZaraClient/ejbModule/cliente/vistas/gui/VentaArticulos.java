/*
 * VentaArticulos.java
 *
 * Created on 6 de abril de 2009, 00:44
 */

package cliente.vistas.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.util.Calendar;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JEditorPane;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

import cliente.constantes.ZaraConstants;
import cliente.controladores.VentaArticulosController;
import cliente.vistas.VistaVentaArticulos;
import cliente.vistas.gui.tables.VentasCantidadTableRenderer;
import cliente.vistas.gui.tables.VentasTableButtonEditor;
import cliente.vistas.gui.tables.VentasTableButtonRenderer;

/**
 *
 * @author  chama
 */
public class VentaArticulos extends JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private VistaVentaArticulos vistaPadre;
    
	/** Creates new form VentaArticulos */
    public VentaArticulos(VistaVentaArticulos vista) {
        initComponents();
        vistaPadre = vista;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	
    	this.setTitle("Venta de Artículos");
    	
        jPanel1 = new JPanel();
        txt_referencia = new JTextField();

        txtDetalles = new JEditorPane();
        txtDetalles.setAutoscrolls(false);
        txtDetalles.setEditable(false);
        txtDetalles.setContentType("text/html"); 
        
        lblDetalles = new JLabel();
        jLabel1 = new JLabel();
        btn_agregar = new JButton();
        jScrollPane1 = new JScrollPane();
        tablaArticulos = new JTable();
        jPanel2 = new JPanel();
        jLabel2 = new JLabel();
        jComboBox1 = new JComboBox();
        jLabel4 = new JLabel();
        jTextField2 = new JTextField();
        lblFecha = new JLabel();
        subtotal = new JLabel();
        iva = new JLabel();
        total = new JLabel();
        btn_generarFactura = new JButton();
        btn_salir = new JButton();
        
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
       
        lblDetalles.setText("Detalles: ");

        jPanel1.setBorder(BorderFactory.createTitledBorder("Artículos"));

        jLabel1.setText("ID:");
                        
        JScrollPane scrollingArea = new JScrollPane(txtDetalles);
        scrollingArea.setAutoscrolls(false);

        
        txt_referencia.addKeyListener(new KeyListener(){

			public void keyPressed(KeyEvent e) {			
				if (e.getKeyCode() == KeyEvent.VK_ENTER )
				{
					doAgregarArticulo();
				}
			}
			public void keyReleased(KeyEvent arg0) {}
			public void keyTyped(KeyEvent arg0) {}
		});

        btn_agregar.setText("Agregar");
        
        btn_agregar.addActionListener(new ActionListener(){

			public void actionPerformed(ActionEvent e) {
				doAgregarArticulo();
			}
        	
        });
        
       tablaArticulos.setModel(new DefaultTableModel() {
		private static final long serialVersionUID = 1L;
			Class[] types = new Class [] {
                Object.class, Object.class, Object.class, Object.class, Boolean.class, Integer.class, JButton.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true 
            };

            @Override
			public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
                        
            @Override
			public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        ((DefaultTableModel)tablaArticulos.getModel()).setDataVector(
        		new Object[][]{},
        		new Object[]{"Referencia", "Línea", "Descripción", "Precio", "Precio Oferta?", "Cantidad", "Borrar"}
        );
        
        tablaArticulos.setEditingColumn(1);
        jScrollPane1.setViewportView(tablaArticulos);
        
        tablaArticulos.setDefaultRenderer(Integer.class, new VentasCantidadTableRenderer());                
        tablaArticulos.setDefaultRenderer(JButton.class, new VentasTableButtonRenderer());
        tablaArticulos.setDefaultEditor(JButton.class, new VentasTableButtonEditor(new JCheckBox()));
        
        ((VentasTableButtonEditor)tablaArticulos.getDefaultEditor(JButton.class)).addCellEditorListener(new CellEditorListener(){

			public void editingCanceled(ChangeEvent e) {}

			public void editingStopped(ChangeEvent e) {
				long ref = (Long)tablaArticulos.getModel().getValueAt(tablaArticulos.getSelectedRow(), 0);
				
				((VentaArticulosController)vistaPadre.getControlador()).borrarArticulo(ref, tablaArticulos.getSelectedRow());
			}});
        
        tablaArticulos.getDefaultEditor(Boolean.class).addCellEditorListener(new CellEditorListener(){

			public void editingCanceled(ChangeEvent e) {}

			public void editingStopped(ChangeEvent e) {
				
				long ref = (Long)tablaArticulos.getModel().getValueAt(tablaArticulos.getSelectedRow(), 0);
				
				if ((Boolean)tablaArticulos.getModel().getValueAt(tablaArticulos.getSelectedRow(), tablaArticulos.getSelectedColumn())){
					((VentaArticulosController)vistaPadre.getControlador()).togglePrecio(ref, ZaraConstants.PRECIO_OFERTA, tablaArticulos.getSelectedRow());
				}
				else
				{
					((VentaArticulosController)vistaPadre.getControlador()).togglePrecio(ref, ZaraConstants.PRECIO_LISTA, tablaArticulos.getSelectedRow());
				}
			}});
                
                

        
        tablaArticulos.getColumnModel().getColumn(0).setMinWidth(100);
        tablaArticulos.getColumnModel().getColumn(0).setPreferredWidth(100);
        tablaArticulos.getColumnModel().getColumn(0).setMaxWidth(100);
        tablaArticulos.getColumnModel().getColumn(1).setMinWidth(70);
        tablaArticulos.getColumnModel().getColumn(1).setPreferredWidth(70);
        tablaArticulos.getColumnModel().getColumn(1).setMaxWidth(70);
        tablaArticulos.getColumnModel().getColumn(3).setMinWidth(70);
        tablaArticulos.getColumnModel().getColumn(3).setPreferredWidth(70);
        tablaArticulos.getColumnModel().getColumn(3).setMaxWidth(70);
        tablaArticulos.getColumnModel().getColumn(4).setMinWidth(70);
        tablaArticulos.getColumnModel().getColumn(4).setPreferredWidth(70);
        tablaArticulos.getColumnModel().getColumn(4).setMaxWidth(70);
        tablaArticulos.getColumnModel().getColumn(5).setMinWidth(70);
        tablaArticulos.getColumnModel().getColumn(5).setPreferredWidth(70);
        tablaArticulos.getColumnModel().getColumn(5).setMaxWidth(70);
        tablaArticulos.getColumnModel().getColumn(6).setMinWidth(50);
        tablaArticulos.getColumnModel().getColumn(6).setPreferredWidth(50);
        tablaArticulos.getColumnModel().getColumn(6).setMaxWidth(50);


        tablaArticulos.getModel().addTableModelListener(new TableModelListener(){

			public void tableChanged(TableModelEvent arg0) {
				setVals();
				
			}
        	
        	
        });

        

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(txt_referencia, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)                                              
                .addComponent(btn_agregar)
                .addGap(6, 6, 6)                                           
            	.addContainerGap(20, Short.MAX_VALUE)
            	.addComponent(lblDetalles)
            	.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            	.addComponent(scrollingArea, GroupLayout.PREFERRED_SIZE, 500, GroupLayout.PREFERRED_SIZE)
            	.addContainerGap())
            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 847, GroupLayout.PREFERRED_SIZE)
                .addContainerGap()));
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                //.addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)                    
                    .addComponent(txt_referencia, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)                                                           
                    .addComponent(btn_agregar, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(lblDetalles)
                    .addComponent(scrollingArea, GroupLayout.PREFERRED_SIZE, 160, GroupLayout.PREFERRED_SIZE)                  
                    .addGap(18, 18, 18))
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 207, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE)));

        jPanel1Layout.linkSize(SwingConstants.VERTICAL, new java.awt.Component[] {btn_agregar, jLabel1, txt_referencia, jTextField2});

        jPanel2.setBorder(BorderFactory.createTitledBorder("Datos de Factura"));

        jLabel2.setText("Tipo de Factura:");

        jComboBox1.setModel(new DefaultComboBoxModel(new String[] { "A", "B", "C" }));

        jComboBox1.addActionListener(new ActionListener(){

			public void actionPerformed(ActionEvent arg0) {
				setIVA();				
			}
        	
        	
        });
        
        
        jLabel4.setText("Cliente:");

        jTextField2.setText("");

        lblFecha.setText("Fecha: " + DateFormat.getInstance().format((Calendar.getInstance().getTime())));

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel4)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, 196, GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138)
                .addComponent(jLabel2)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(lblFecha)
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, 27, GroupLayout.PREFERRED_SIZE)
                .addComponent(lblFecha)
                .addComponent(jLabel4)
                .addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        sub =0;
        subtotal.setText("Subtotal: " + sub);

        imp=0;
        iva.setText("IVA: " + imp);

        tot=0;
        total.setText("TOTAL: "+ tot);

        btn_generarFactura.setText("Generar Factura");
        btn_generarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doGenerarFactura(evt);
                
            }
        });

        btn_salir.setText("Salir");
        
        btn_salir.addActionListener(new ActionListener(){

			public void actionPerformed(ActionEvent arg0) {
				doSalir();
			}});

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(subtotal)
                                .addComponent(iva)
                                .addComponent(total))
                            .addGap(36, 36, 36))
                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(jPanel1, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addContainerGap()))
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_generarFactura)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_salir)
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subtotal)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iva)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(total)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_salir)
                    .addComponent(btn_generarFactura))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        
               
        pack();
    }
	   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btn_agregar;
    private JButton btn_generarFactura;
    private JButton btn_salir;
    private JComboBox jComboBox1;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel subtotal;
    private JLabel jLabel4;
    private JLabel lblFecha;
    private JLabel iva;
    private JLabel total;
    private JLabel lblDetalles;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JScrollPane jScrollPane1;
    private JTable tablaArticulos;
    private JTextField txt_referencia;
    private JTextField jTextField2;
    private JEditorPane txtDetalles;
    private double sub;
    private double imp;
    private double tot;

	public JTable getTablaArticulos() {
		return tablaArticulos;
	}
	
	private void doSalir(){
		((VentaArticulosController)vistaPadre.getControlador()).cerrar();
	}
	
	private void doAgregarArticulo(){
		try {
			long ref = Long.parseLong(txt_referencia.getText());			
			((VentaArticulosController)vistaPadre.getControlador()).agregarArticulo(ref);
		}
		catch (NullPointerException n) {
			vistaPadre.showErrorPopup("El número de referencia está faltando");
		}
		catch (NumberFormatException e){
			vistaPadre.showErrorPopup("El codigo debe ser numérico");
		}
	}
	
	private void doGenerarFactura(ActionEvent evt) {
		
		
		Object[] datosT = {this.sub, this.imp, this.tot };
		
		//borrar
		Object[] datosF = {this.jTextField2.getText(), this.lblFecha.getText(), this.jComboBox1.getSelectedItem().toString()};
	    
		
	    DefaultTableModel model = (DefaultTableModel) tablaArticulos.getModel();
	    ((VentaArticulosController)vistaPadre.getControlador()).nuevaVenta(model.getDataVector(), datosT);
	    
	    
	    //tiene que pasar un VO
	    //TODO falta pasar el vo
	    
	    //((VentaArticulosController)vistaPadre.getControlador()).nuevaFactura(ultimaVenta);
	    
	    
	}

	public JEditorPane getTxtDetalles() {
		return txtDetalles;
	}
	
	public String getTipoFactura(){
		return this.jComboBox1.getSelectedItem().toString();
	}
	
	public void setIVA(){
		
		DecimalFormat dec = new DecimalFormat("$#0.00");
		
		if (this.jComboBox1.getSelectedItem().toString().equalsIgnoreCase("A")){
			imp=0;
	        iva.setText("IVA: " + dec.format(imp));
	    };
		
		if (this.jComboBox1.getSelectedItem().toString().equalsIgnoreCase("B")){
			imp=(sub*(0.21));
	        iva.setText("IVA: " + dec.format(imp));
		};

		if (this.jComboBox1.getSelectedItem().toString().equalsIgnoreCase("C")){
			imp=(sub*(0.21));
	        iva.setText("IVA: " + dec.format(imp));
		};
		setTotal();
	}
	
	public void setSubtotal(){
		DecimalFormat dec = new DecimalFormat("$#0.00");
		sub=0;
		
		for (int i=0;i<tablaArticulos.getRowCount();i++){
			sub=sub+(Double.parseDouble(tablaArticulos.getModel().getValueAt(i, 3).toString())* Double.parseDouble(tablaArticulos.getModel().getValueAt(i, 5).toString()));
		}
        subtotal.setText("Subtotal: " + dec.format(sub));

	}
	
	public void setTotal(){
		DecimalFormat dec = new DecimalFormat("$#0.00");
		
		tot=sub+imp;
        total.setText("TOTAL: "+ dec.format(tot));
	}
	
	public void setVals(){
		setSubtotal();
		setIVA();
		setTotal();
	}

    // End of variables declaration//GEN-END:variables

}
